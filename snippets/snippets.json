{
	"def": {
		"prefix": "def",
		"body": [
			"def ${1:name} (${2:arguments}) {}"
		],
		"description": "Define a function."
	},
	"var": {
		"prefix": "var",
		"body": [
			"var ${1:name} = ${2:value};"
		],
		"description": "Define a variable."
	},
	"if": {
		"prefix": "if",
		"body": [
			"if (${1:condition}) {}"
		],
		"description": "If statement."
	},
	"if-else": {
		"prefix": "ifelse",
		"body": [
			"if (${1:condition}) {} else ${3:statment}"
		],
		"description": "If-else statement."
	},
	"while": {
		"prefix": "while",
		"body": [
			"while (${1:condition}) {}"
		],
		"description": "While statement."
	},
	"for": {
		"prefix": "for",
		"body": [
			"for (${1:statment1};${2:condition};${3:statment}) {}"
		],
		"description": "For statement."
	},
	"cross-package-access-expression": {
		"prefix": "@",
		"body": [
			"@{${1:\"packageName\"}} -> ${2:MemberExpression}"
		],
		"description": "Cross package access expression."
	},
	"new-expression": {
		"prefix": "new",
		"body": [
			"new ${1:name}.${2:constructor}(${3:params})"
		],
		"description": "New expression."
	},
	"class-definition": {
		"prefix": "class",
		"body": [
			"class ${1:name} ${2:extends ( )} {};"
		],
		"description": "Class definition."
	},
	"native-class-declaration": {
		"prefix": "native",
		"body": [
			"native_class ${1:name} in \"${2:path}\";"
		],
		"description": "Native class declaration."
	}
}